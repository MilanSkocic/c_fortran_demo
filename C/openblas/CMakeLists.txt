cmake_minimum_required(VERSION 3.10)

project(test_openblas LANGUAGES "C")

set(CMAKE_C_FLAGS_DEBUG "${CMAKE_Fortran_FLAGS_DEBUG} -std=c99 -Wall")

message("C DEBUG FLAGS= " ${CMAKE_C_FLAGS_DEBUG})
message("C RELEASE FLAGS= " ${CMAKE_C_FLAGS_RELEASE})

set(LIB_MSYS C:/msys64/mingw64/lib)
set(INC_MSYS C:/msys64/mingw64/include/OpenBLAS)

set(LIB_UNIX /usr/local/opt/openblas/lib)
set(INC_UNIX /usr/local/opt/openblas/include)


if(WIN32)
	if(COMPILER STREQUAL "Intel")
		MESSAGE(STATUS "Compiling with Intel on Win32")
		add_compile_options("-Qmkl")
		set(CMAKE_C_COMPILER icl)
	endif(COMPILER STREQUAL "Intel")
	if(MSVC)
		MESSAGE(STATUS "Compiling with MSVC on Win32")
		set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/win_msvc)
		set(LIB_DIR ${LIB_MSYS})	
		set(INC_DIR ${INC_MSYS})	
	endif(MSVC)
	if(MSYS)
		MESSAGE(STATUS "Compiling with MSYS on Win32")
		set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/win_msys)
		set(LIB_DIR ${LIB_MSYS})	
		set(INC_DIR ${INC_MSYS})	
	endif(MSYS)
endif(WIN32)

if(UNIX)
	if(COMPILER STREQUAL "Intel")
		MESSAGE(STATUS "Compiling with Intel on Unix")
		add_compile_options("-Qmkl")
		set(CMAKE_C_COMPILER icc)
	endif(COMPILER STREQUAL "Intel")
	if(MSYS)
		MESSAGE(STATUS "Compiling with MSYS on UNIX")
		set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/unix_msys)
		set(LIB_DIR ${LIB_MSYS})	
		set(INC_DIR ${INC_MSYS})	
	else()
		MESSAGE(STATUS "Compiling with GCC on UNIX")
		set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/unix_gcc)
		set(LIB_DIR ${LIB_UNIX})
		set(INC_DIR ${INC_UNIX})	
	endif(MSYS)
endif(UNIX)

add_executable(array)
target_sources(array PRIVATE array.c)
target_link_libraries(array PRIVATE openblas)

add_executable(test_blas)
target_sources(test_blas PRIVATE test_blas.c)
target_link_libraries(test_blas PRIVATE openblas)